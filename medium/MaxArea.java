package LeetCode.medium;

public class MaxArea {
//	��������ָ��left����ָ��right����leftָ���ֵС��right��ֵ���������ǽ���ָ�����ƣ�����ָ�����ƺ��ֵ����ָ��ָ���ֵ������������
//	1.��ָ��ָ���ֵ������ָ��
//	��������£������ĸ�ȡ������ָ�룬���ǵױ���ˣ���������ʢˮ��һ����С
//	2.��ָ��ָ���ֵ������ָ��
//	��������£������ĸ�ȡ������ָ�룬���ǵױ���ˣ���������ʢˮ��һ����С
//	3.��ָ��ָ���ֵС����ָ��
//	��������£������ĸ�ȡ������ָ�룬������ָ��С����ָ�룬�ҵ�Ҳ����ˣ���������ʢˮ��һ����С��
//	***  ���������������߶Ƚϴ��һ����ƶ�ֻ���������ʢˮ����С,����Ӧ���ƶ��߶Ƚ�Сһ���ָ�룬������������ֱ����ָ��������	
//	***��֮ǰ֤����ֻ������ָ�벻�ı������£�������ָ��ֻ�����������������С������һ����������ָ�뷢���仯�����޷�֤���Ը���ָ��Ϊһ��ߣ���ָ���Ҳ��ֵ���ɵ������������ȵ�ǰֵС��
//	���²���һ���򵥵ķ�֤��֤���㷨�ĺ�����
//	��ǰ���㷨Ϊ��ʹ������ָ��ֱ�ָ�������ͷ��β��ָ���ֵ��С���Ǹ�ָ���ƶ�������ָ�����ƣ���ָ�����ơ�������ָ������ʱ��ָ��
//	���裺���㷨��û�б����������������
//	�������������ʱ��ָ��Ϊp_left��p_right���������裬���ǿ��Լ������ʱ��ָ���ȵ���p_left�����ǵ���ָ��Ϊp_leftʱ����ָ�뻹û�о���p_right��ָ����ƶ���
//	��֪����ָ��ͣ����p_leftʱ����ֻ�������ֳ����»ᷢ���ı�
//	1.��ָ�����ָ����p_left����������ָ��һ����ǰ��p_left��;�о���p_right��������ì��
//	2.��ָ��λ��p_right�Ҳ��ҵ�ǰ��ֵ������ָ�롣������������£���ʱ������ʢˮ��������������ʢˮ����Ҫ��������ì��
//	��˸��㷨�ı���һ������������ʢˮ�������
	public static int maxArea(int[] height) {//�������� ����ʱ       
		int res = 0;
		int i = 0, j = height.length-1;
		while(i < j){
			res = Math.max(res, Math.min(height[i], height[j])*(j-i));//�Ż���������ͬ�ĸ߶���ֱ���ƶ�i��j�����ٽ��м�������
			if(height[i] > height[j])
				j --;
			else
				i ++;
		}								
		return res;
    }
	
	public static void main(String args[]){
		int[] nums = {9,2,3,4,5,6,7,8,9};
		System.out.println(maxArea(nums));
	}
}
